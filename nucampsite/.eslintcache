[{"D:\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","D:\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"2","D:\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"7","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"8","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"9","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"10","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"12","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"13","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"14","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"17","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"18","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"19","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"20","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"21","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"22","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"24","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"25"},{"size":695,"mtime":1609290036809,"results":"26","hashOfConfig":"27"},{"size":568,"mtime":1609978739221,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608591738637,"results":"29","hashOfConfig":"27"},{"size":1843,"mtime":1610588437310,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1609388119884,"results":"31","hashOfConfig":"27"},{"size":7123,"mtime":1610596465427,"results":"32","hashOfConfig":"27"},{"size":3342,"mtime":1610596363459,"results":"33","hashOfConfig":"27"},{"size":4623,"mtime":1609905544935,"results":"34","hashOfConfig":"27"},{"size":1948,"mtime":1609302757261,"results":"35","hashOfConfig":"27"},{"size":1652,"mtime":1610590745193,"results":"36","hashOfConfig":"27"},{"size":11373,"mtime":1610501764897,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1609385800747,"results":"38","hashOfConfig":"27"},{"size":303,"mtime":1609385823035,"results":"39","hashOfConfig":"27"},{"size":1054,"mtime":1609385806718,"results":"40","hashOfConfig":"27"},{"size":4231,"mtime":1609619150684,"results":"41","hashOfConfig":"27"},{"size":829,"mtime":1610501892398,"results":"42","hashOfConfig":"27"},{"size":638,"mtime":1610500797271,"results":"43","hashOfConfig":"27"},{"size":587,"mtime":1610596281869,"results":"44","hashOfConfig":"27"},{"size":714,"mtime":1610589432724,"results":"45","hashOfConfig":"27"},{"size":189,"mtime":1610412505266,"results":"46","hashOfConfig":"27"},{"size":453,"mtime":1610589345683,"results":"47","hashOfConfig":"27"},{"size":4441,"mtime":1610597020122,"results":"48","hashOfConfig":"27"},{"size":269,"mtime":1610498091914,"results":"49","hashOfConfig":"27"},{"size":174,"mtime":1610501852025,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610590677880,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cgdbru",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["106","107"],"D:\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],["108","109"],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["110","111","112"],"import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Label, Modal, FormGroup, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    // handleSubmit(values) {\r\n    //     this.toggleModal();\r\n    //     alert(values);\r\n    // }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" />\r\n                    Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <FormGroup>\r\n                            <Label>Rating</Label>\r\n                            <div className=\"form-group\">\r\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\" placeholder=\"Rating\" className=\"form-control\">\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            </Control.select>\r\n                            </div>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Author</Label>\r\n                            <div className=\"form-group\">\r\n                            <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                placeholder=\"Author\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, \r\n                                        minLength: minLength(2),\r\n                                        maxLength: maxLength(15)\r\n                                    }}\r\n                            />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".author\"\r\n                                show=\"touched\"\r\n                                component=\"div\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be at least 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                            /> \r\n                            </div>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Comment</Label>\r\n                            <div className=\"form-group\">\r\n                            <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows={6} placeholder=\"Comment\" className=\"form-control\"/> \r\n                            </div>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nfunction RenderCampsite({ campsite }) {\r\n    return (\r\n        <div className='col-md-5 m-1'>\r\n            <Card>\r\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                        <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nfunction RenderComments({ comments, postComment, campsiteId }) {\r\n    if (comments) {\r\n        return (\r\n            <div className='col-md-5 m-1'>\r\n                <h4>Comments</h4>\r\n                {comments.map(comment => <div key={comment.id}>\r\n                <div>--{comment.text}\r\n                <br></br>\r\n                {comment.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</div>\r\n                <br></br>\r\n                    </div>)}\r\n            <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n        </div> \r\n        );   \r\n        } else {\r\n            return (\r\n                <div>\r\n                </div>\r\n            );\r\n        }\r\n}\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"className\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsite) {\r\n        return (\r\n            <div className='container'>\r\n                    <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments \r\n                         comments={props.comments}\r\n                         postComment={props.postComment}\r\n                         campsiteId={props.campsite.id}\r\n                        />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CampsiteInfo;","D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["113","114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Input, Col,Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        }\r\n\r\n       \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />                     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />                                         \r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form=check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                             /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n           \r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n","D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"D:\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":50,"column":29,"nodeType":"130","endLine":50,"endColumn":133},{"ruleId":"128","severity":1,"message":"131","line":62,"column":29,"nodeType":"130","endLine":70,"endColumn":31},{"ruleId":"128","severity":1,"message":"132","line":87,"column":29,"nodeType":"130","endLine":87,"endColumn":140},{"ruleId":"133","severity":1,"message":"134","line":2,"column":53,"nodeType":"135","messageId":"136","endLine":2,"endColumn":58},{"ruleId":"133","severity":1,"message":"137","line":4,"column":33,"nodeType":"135","messageId":"136","endLine":4,"endColumn":40},{"ruleId":"128","severity":1,"message":"131","line":82,"column":33,"nodeType":"130","endLine":90,"endColumn":39},{"ruleId":"128","severity":1,"message":"131","line":107,"column":33,"nodeType":"130","endLine":115,"endColumn":39},{"ruleId":"128","severity":1,"message":"131","line":132,"column":33,"nodeType":"130","endLine":141,"endColumn":39},{"ruleId":"128","severity":1,"message":"131","line":159,"column":33,"nodeType":"130","endLine":166,"endColumn":39},{"ruleId":"128","severity":1,"message":"138","line":183,"column":45,"nodeType":"130","endLine":187,"endColumn":48},{"ruleId":"128","severity":1,"message":"129","line":193,"column":37,"nodeType":"130","endLine":194,"endColumn":70},{"ruleId":"128","severity":1,"message":"132","line":203,"column":37,"nodeType":"130","endLine":205,"endColumn":67},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]